plugins {
    id 'application'
    id "com.avast.gradle.docker-compose" version "0.14.3"
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    mainClass = 'org.ethelred.mymailtool2.Main'
    applicationName = 'mymailtool2'
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation group: 'args4j', name: 'args4j', version: '2.0.8'
    implementation group: 'com.google.guava', name: 'guava', version: '11.0.1'
    implementation group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.5.0'
    implementation group: 'joda-time', name: 'joda-time', version: '2.1'
    implementation group: 'org.mozilla', name: 'rhino', version: '1.7.13'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'
    testImplementation group: 'junit', name: 'junit', version: '4.10'
    testImplementation group: 'org.jmock', name: 'jmock', version: '2.5.1'
    testImplementation group: 'org.jmock', name: 'jmock-legacy', version: '2.5.1'

}

task install {
    dependsOn installDist
    doLast {
        ant.mkdir(dir: "${rootDir}/bin")
        ant.symlink(resource: "${(installDist.outputs.files as List).first()}/bin/${application.applicationName}", link: "${rootDir}/bin/${application.applicationName}")
    }
}

task cleanBin(type: Delete) {
    delete 'bin'
}

clean.dependsOn cleanBin

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

dockerCompose.isRequiredBy(integrationTest)
